
//Martin Murphy
//CS112
//10/16/2014
//Project 3 

//EC attempted




import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public class VehiclePanel extends JPanel 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Settings
//BORDER style GUI



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


{
	private JButton BinarySearch, SelectionSort, Print, PrintClass,Clear,numVehicles,Exit;
	private JTextArea VehiclesData;
	private Vehicle[] temp_database;

	public VehiclePanel(Vehicle[] InputInventory)
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Db array
	//Variables intizl
	
	//add buttons
	//config color options for buttons along with font using swing


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	{
		temp_database = InputInventory;

Color color = new Color(46,204, 113);
		
		numVehicles = new JButton("Inventory Size");
		numVehicles.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 32));
		numVehicles.setBackground(color);
		numVehicles.setForeground(Color.WHITE);
		numVehicles.setOpaque(true);
		numVehicles.setBorderPainted(false);
		numVehicles.addActionListener(new ButtonListener());		
		BinarySearch = new JButton("Search");
		BinarySearch.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 35));
		BinarySearch.setBackground(color);
	    BinarySearch.setForeground(Color.WHITE);
	    BinarySearch.setOpaque(true);
	    BinarySearch.setBorderPainted(false);
		BinarySearch.addActionListener (new ButtonListener());
		SelectionSort = new JButton("Sort");
		SelectionSort.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 35));
		SelectionSort.setBackground(color);
	    SelectionSort.setForeground(Color.WHITE);
	    SelectionSort.setOpaque(true);
	    SelectionSort.setBorderPainted(false);
		SelectionSort.addActionListener(new ButtonListener());
		
		
		
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//font cuztm
		//opaque
		//border color ******


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		Print = new JButton("Show");
		Print.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 35));
		Print.setBackground(color);
	    Print.setForeground(Color.WHITE);
		Print.setOpaque(true);
		Print.setBorderPainted(false);
		Print.addActionListener(new ButtonListener());		
		PrintClass = new JButton("Category Search");
		PrintClass.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 32));
		PrintClass.setBackground(color);
	    PrintClass.setForeground(Color.WHITE);
		PrintClass.setOpaque(true);
		PrintClass.setBorderPainted(false);		
		PrintClass.addActionListener(new ButtonListener());
		Clear = new JButton("Reset");
		Clear.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 35));
		Clear.setBackground(color);
	    Clear.setForeground(Color.WHITE);
		Clear.setOpaque(true);
		Clear.setBorderPainted(false);
		Clear.addActionListener(new ButtonListener());
		Exit = new JButton("Exit");
		Exit.setFont(new Font("HelveticaNeue-Light", Font.PLAIN, 35));
		Exit.setBackground(color);
	    Exit.setForeground(Color.WHITE);
		Exit.setOpaque(true);
		Exit.setBorderPainted(false);
		Exit.addActionListener(new ButtonListener());
		
		
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Style


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		this.setLayout(new BorderLayout());
		
		JPanel buttonPanelTop = new JPanel();
		buttonPanelTop.setLayout(new GridLayout(1,3));
		buttonPanelTop.add(Print);
		buttonPanelTop.add(SelectionSort);
		buttonPanelTop.add(numVehicles);		
		buttonPanelTop.add(BinarySearch);		
			
			
		buttonPanelTop.add(PrintClass);
		this.add(buttonPanelTop, BorderLayout.NORTH);


		JPanel buttonPanelBottom = new JPanel();
		buttonPanelBottom.setLayout(new GridLayout(1,3));
		buttonPanelBottom.add(Clear);
		buttonPanelBottom.add(Exit);
		this.add(buttonPanelBottom, BorderLayout.SOUTH);
		

//		textFrame = new JPanel();
//		textFrame.setBackground(new Color(46, 204, 113));
//		textFrame.setForeground(Color.WHITE);
//		add(textFrame);
		
		VehiclesData = new JTextArea(60, 91);
		VehiclesData.setFont(new Font("HelveticaNeue-Light",Font.PLAIN, 18));
		VehiclesData.setForeground(new Color(236, 240, 241));
		VehiclesData.setBackground(new Color(52, 73, 94));
		
		
		this.add(VehiclesData,BorderLayout.CENTER);

//		JScrollPane scrollPane = new JScrollPane(VehiclesData);
//		scrollPane.add(VehiclesData);
		
//		textFrame.add(VehiclesData,BorderLayout.CENTER);
//		textFrame.add(scrollPane);

		//setting size
		setPreferredSize (new Dimension(1366, 768));
		
		setBackground(new Color(44,62,80)); 
		

	}
	
	
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//LISTEN do
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	private class ButtonListener implements ActionListener
	{
		public void actionPerformed (ActionEvent event)
		{
			if (event.getSource()==BinarySearch)
			
			{
				String BS = JOptionPane.showInputDialog ("Must sort first before search");
				Vehicle temp = VehicleDatabase.BinarySearch(temp_database,BS);
				
				
				if (temp!=null)
				
				{
					VehiclesData.setText("");
					VehiclesData.setText(temp.toString());
				}
				
				
				else
				
				{
					VehiclesData.setText("");
					VehiclesData.setText("Sorry reset");
				}
			}
			
			
			
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//     I/O
//Scanner


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			else if (event.getSource()==SelectionSort)
			
			{
				String SS = JOptionPane.showInputDialog ("Sort by manufacturer then use search");
				VehicleDatabase.selectionSort(temp_database, SS);
				if (temp_database.length==0)
				
				{
					VehiclesData.setText("");
					VehiclesData.setText("Null ");
				}
				else if (SS.compareToIgnoreCase("manufacturer")!=0&&
						SS.compareToIgnoreCase("numWheels")!=0)
				
				{
					VehiclesData.setText("Not available");
				}
				else {
					VehiclesData.setText("");
					VehiclesData.append("Sorted array"+"\n+\n");
					for (int i = 0; i<temp_database.length; i++){
						VehiclesData.append(temp_database[i].toString()+"\n");
					}
				}
			}
			
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Conditions bases


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			else if (event.getSource()==Print)
			
			
			{
				if (temp_database.length==0)
				
				{
					VehiclesData.setText("");
					VehiclesData.setText("There is nothing in the inventory");
				}
				else 
				
				{
					VehiclesData.setText("");
					for (int i = 0; i<temp_database.length; i++)
					
					{
						VehiclesData.append(temp_database[i].toString()+"\n");
					}
				}
			}
			else if (event.getSource()==PrintClass)
			
			{
				String PS = JOptionPane.showInputDialog ("Classes ");
				if (PS.compareToIgnoreCase("Sedan")!=0&&
						PS.compareToIgnoreCase("MotorCycle")!=0&&
						PS.compareToIgnoreCase("Bicycle")!=0&&
						PS.compareToIgnoreCase("Truck")!=0
						)
				
				
				{
					VehiclesData.setText("");
					VehiclesData.setText("No class is found");
				}
				else if(temp_database.length==0)
					
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Comparable


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
				
				{
					VehiclesData.setText("There is nothing in the inventory");
				}
				else
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Guild
//Scanner


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
				{
					VehiclesData.setText("");
					for (int i = 0; i < temp_database.length; i++) 
					
					{
						if (temp_database[i].getClassName().compareToIgnoreCase(PS) == 0) 
						
						{
							VehiclesData.append(temp_database[i].toString()+"\n");
						}
					}
				}
			}
			else if(event.getSource()==numVehicles)
				
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Count2print


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			
			{
				String NV = Integer.toString(Vehicle.numVehicles);
				
				
				
				VehiclesData.setText("Count "+  NV);
			}
			
			else if(event.getSource()==Clear)
				
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//update

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			{
				VehiclesData.setText("");
			}
			
			else {
				System.exit(0);
			}
		}
	}
}
